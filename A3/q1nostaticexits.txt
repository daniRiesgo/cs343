Gathered data shows an increment of 95% (without compiler optimizations) or 292% (enabling compiler optimizations)
in CPU user time when removing static exits in do_work() function. This clearly shows the advantage of these static
exits, which avoid the unnecessary extra looping executed in the implemented version.

Compiler optimizations considerably affect execution time of do_work(), reducing such of both original and modified
versions in 29.5 and 59.4% respectively. It seems like the compiler also notices the inefficiency of the modified
version.

RAW DATA:

~ ./nostaticexits 2000 200 10 25

original, no opt 0.479s average ( 0.481s - 0.477s - 0.481s - 0.481s )
original, with opt 0.141s average ( 0.140s - 0.143s - 0.139s - 0.144s )

no static exits, no opt 0.936s average ( 0.942s - 0.933s - 0.935s - 0.934s )
no static extis, with opt 0.553s average ( 0.559s - 0.553s - 0.551s - 0.549s )
