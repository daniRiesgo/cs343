The version having the memory optimization is â‰ˆ3 times faster. Storing the variables in whole words employs more space in memory, but generates faster memory access for the cache does not need to perform write-backs as often as if a word contained more than one different variables.

A long int typically takes 32b, depending on the architecture they can take up to 64b. In the case of the linux environment, they take 32 and thus we observe the difference in performance given that the system has 8-byte words hence containing 2 variables per word.

A (void *) cast is needed to print the address and not the actual content of the variable, for there is an overload of the << operator for std::cout that makes the content to be printed instead.

Here we have the raw results of our tests:

Timing results with PAD defined
Average: .58u, .29 total
0.57u 0.01s 0:00.29
0.59u 0.00s 0:00.29

Timing results without PAD defined
Average: 1.79u .94 total
1.68u 0.00s 0:00.86
1.90u 0.00s 0:01.01
